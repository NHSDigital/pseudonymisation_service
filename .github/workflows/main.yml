name: CI

on:
  push:
    branches: [ master, gh-action-spike ]
  pull_request:
    branches: [ master, gh-action-spike ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 2s
          --health-timeout 1s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.0
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: installed-gems-${{ hashFiles('Gemfile.lock') }}
        restore-keys: installed-gems-
    - name: Inject config
      run: mv config/database.yml{.ci,}
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Prepare test database
      run: bin/rails db:setup
      env:
        RAILS_ENV: test
    - name: Run tests
      run: bin/rake
    - name: Run tests
      run: bin/rake

  brakeman:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.0
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: installed-gems-${{ hashFiles('Gemfile.lock') }}
        restore-keys: installed-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Run Brakeman
      run: bundle exec brakeman

  bundle-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.0
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: installed-gems-${{ hashFiles('Gemfile.lock') }}
        restore-keys: installed-gems-
    - name: Inject config
      run: mv config/database.yml{.ci,}
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Run bundle-audit
      run: bundle exec bundle-audit check --update
      continue-on-error: true
